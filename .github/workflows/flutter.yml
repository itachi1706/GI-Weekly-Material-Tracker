# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Generate Debug Flutter Apps (Non-Release)

on: 
  push:
  pull_request:
  workflow_dispatch:

env:
  GIT_RUN_NUMBER: ${{ github.run_number }}
  CI_COMMIT_REF_NAME: ${{ github.ref_name }}

jobs:
  webapp:
    name: Web App # From "Build Web App" in GitLab CI
    runs-on: ubuntu-latest
    env:
      APP_BUILD_VER: web
      APP_TYPE: Web
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Flutter Stable
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: '3.19.x' # TODO(#813): Remove this line after Flutter 3.16 upgrade 
          channel: 'stable'
          cache: true
      - name: Cache pubspec dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            ${{ env.PUB_CACHE }}
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: build-pubspec-
      - name: Trust GitHub Workspace
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Test Flutter Doctor
        run: flutter doctor -v
      - name: Retrieve Firebase Options Web Dart File and decode it to a file
        env:
          GOOGLE_SVC_DART: ${{ secrets.GOOGLE_SVC_DART }}
          PUB_SEC_DART: ${{ secrets.PUB_SEC_DART }}
        run: |
          echo $GOOGLE_SVC_DART | base64 -d > lib/firebase_options.dart
          echo $PUB_SEC_DART | base64 -d > lib/app_secrets.dart
      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 8
      - name: Pre-Setup and obtain version information
        run: |
          export GIT_COMMIT_COUNT="$(git rev-list --count HEAD)"
          echo $GIT_COMMIT_COUNT
          echo $GIT_COMMIT_SHORT_SHA
          chmod +x ./ciscripts/get_version.sh
          ./ciscripts/get_version.sh
        env:
          CI_COMMIT_SHORT_SHA: ${{ steps.short-sha.outputs.sha }}
      - name: Build Flutter App
        run: flutter build web
      - name: Package Artifact
        run: |
          mkdir -p firebase/public
          mv build/web/* ./firebase/public
          zip -r webapp.zip ./firebase/public
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-web-artifact
          path: |
            firebase/
            webapp.zip
  android:
    name: Android Apps # From "Generate Flutter App" in GitLab CI
    runs-on: ubuntu-latest
    env:
      APP_BUILD_VER: dogfood
      APP_TYPE: Android
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Flutter Stable
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: '3.19.x' # TODO(#813): Remove this line after Flutter 3.16 upgrade
          channel: 'stable'
          cache: true
      - name: Cache pubspec dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            ${{ env.PUB_CACHE }}
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: build-pubspec-
      - name: Install JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Trust GitHub Workspace
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Test Flutter Doctor
        run: flutter doctor -v  
      - name: Retrieve Firebase Options Dart files and decode to file
        env:
          GOOGLE_SVC_ANDROID: ${{ secrets.GOOGLE_SVC_ANDROID }}
          GOOGLE_SVC_DART: ${{ secrets.GOOGLE_SVC_DART }}
          PUB_SEC_DART: ${{ secrets.PUB_SEC_DART }}
        run: |
          echo $GOOGLE_SVC_ANDROID | base64 -d > android/app/google-services.json
          echo $GOOGLE_SVC_DART | base64 -d > lib/firebase_options.dart
          echo $PUB_SEC_DART | base64 -d > lib/app_secrets.dart
      - name: Obtain Debug Keystore from Secrets
        env:
          FLUTTER_KEYSTORE: ${{ secrets.FLUTTER_KEYSTORE }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          echo $FLUTTER_KEYSTORE | base64 -d > android/app/flutter.jks
          echo $KEY_PROPERTIES | base64 -d > android/key.properties
      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 8
      - name: Pre-Setup and obtain version information
        run: |
          mkdir release
          export GIT_COMMIT_COUNT="$(git rev-list --count HEAD)"
          echo $GIT_COMMIT_COUNT
          echo $GIT_COMMIT_SHORT_SHA
          chmod +x ./ciscripts/get_version.sh
          ./ciscripts/get_version.sh
        env:
          CI_COMMIT_SHORT_SHA: ${{ steps.short-sha.outputs.sha }}
      - name: Build Android Split APK
        run: |
          flutter build apk --target-platform android-arm,android-arm64,android-x64 --split-per-abi
      - name: Move Split APKs to Release folder
        run: mv ./build/app/outputs/apk/release/*.apk ./release
      - name: Build Android Multi-Arch Fat APK
        run: flutter build apk
      - name: Move Fat APK to Release Folder
        run: |
          cp build/app/outputs/apk/release/app-release.apk ./release
          cp build/app/outputs/apk/release/app-release.apk ./app-fatapk.apk
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-android-artifact
          path: |
            release/
            app-fatapk.apk
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-firebase-release-artifact
          path: |
            LATEST
            firebase/
      - name: Check App Size (Android ARM64)
        run: flutter build apk --analyze-size --target-platform android-arm64
      - uses: actions/upload-artifact@v4
        with:
          name: android-app-size
          path: ~/.flutter-devtools/apk-code-size-analysis_01.json
  ios:
    name: iOS Unsigned IPA
    runs-on: macos-14 # For XCode 14.3.1 and Apple Silicon
    if: false # TODO: Reenable when we upgrade Firebase and Flutter to 3.16 at least (with Dart 3)
#    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'pull_request') || github.event_name == 'workflow_dispatch'  # We only run this on master branch due to the time it takes
    env:
      APP_BUILD_VER: dogfood
      APP_TYPE: iOS
    concurrency:
      group: ios-debug-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # - uses: apple-actions/import-codesign-certs@v1
      #   name: Import Apple Certificate
      #   with: 
      #     p12-file-base64: ${{ secrets.APPLE_DEVCERT }}
      #     p12-password: ${{ secrets.APPLE_DEVCERT_PASSWORD }}
      - name: Install Flutter Stable
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: '3.19.x' # TODO(#813): Remove this line after Flutter 3.16 upgrade
          channel: 'stable'
          cache: true
      - name: Use latest stable version of XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Cache pubspec dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            ${{ env.PUB_CACHE }}
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: build-pubspec-
      - name: Cache Cocoapods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-
      - name: Trust GitHub Workspace
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Test Flutter Doctor
        run: flutter doctor -v  
      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 8
      - name: Pre-Setup and obtain version information
        run: |
          mkdir release
          export GIT_COMMIT_COUNT="$(git rev-list --count HEAD)"
          echo $GIT_COMMIT_COUNT
          echo $GIT_COMMIT_SHORT_SHA
          chmod +x ./ciscripts/get_version.sh
          ./ciscripts/get_version.sh
        env:
          CI_COMMIT_SHORT_SHA: ${{ steps.short-sha.outputs.sha }}
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Install CocoaPods Dependencies
        working-directory: ios
        run: |
          pod repo update
          pod install
      - name: Retrieve Firebase Options Dart files and decode to file
        env:
          GOOGLE_SVC_IOS: ${{ secrets.GOOGLE_SVC_IOS }}
          GOOGLE_SVC_DART: ${{ secrets.GOOGLE_SVC_DART }}
          PUB_SEC_DART: ${{ secrets.PUB_SEC_DART }}
        run: |
          echo $GOOGLE_SVC_IOS | base64 -d > ios/Runner/GoogleService-Info.plist
          echo $GOOGLE_SVC_DART | base64 -d > lib/firebase_options.dart
          echo $PUB_SEC_DART | base64 -d > lib/app_secrets.dart
      - name: Build iOS Package
        run: flutter build ios --no-codesign
      - name: Move Package to Release folder
        run: mv ./build/ios/iphoneos/Runner.app ./release
      - name: Generate IPA File
        run: |
          cd release
          mkdir Payload
          cp -r ./Runner.app Payload
          zip -r app.ipa Payload
          cd ..
      - name: Ensure IPA file generated properly
        run: |
          cd release
          ls -lh .
          cd ..
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-ios-raw-artifact
          path: |
            release/
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-unsigned-ipa-artifact
          path: |
            release/app.ipa
      - name: Check App Size (iOS)
        run: flutter build ios --no-codesign --analyze-size
      - uses: actions/upload-artifact@v4
        with:
          name: ios-app-size
          path: ~/.flutter-devtools/ios-code-size-analysis_01.json
  changedfiles:
    name: Check which files are changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if files changed for Dogfood release
        id: dfoodapk
        uses: tj-actions/changed-files@v44.4.0
        with:
          files: |
            android/**/*
            assets/**/*
            VERSION
            fonts/**/*
            integration_test/**/*
            ios/**/*
            lib/**/*
            data/**/*
            web/**/*
            pubspec.*
      - name: Set output for Dogfood release
        id: dfoodapk_out
        if: steps.dfoodapk.outputs.any_changed == 'true'
        run: echo "any_changed=true" >> $GITHUB_OUTPUT
    outputs:
      dfoodapk: ${{ steps.dfoodapk_out.outputs.any_changed }}
  dogfood:
    runs-on: ubuntu-latest
    name: Deploy Dogfood to Firebase # From "Deploy Dogfood to Firebase" in GitLab CI
    needs: [android, changedfiles]
    if: needs.changedfiles.outputs.dfoodapk && github.event_name == 'push' && github.ref == 'refs/heads/master' 
    concurrency:
      group: deploy-debug-dogfood-${{ github.ref }}
      cancel-in-progress: true
    env:
      APP_TYPE: Android
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: flutter-android-artifact
      - uses: actions/download-artifact@v4
        with:
          name: flutter-firebase-release-artifact
      - name: Git Commit Data
        uses: rlespinasse/git-commit-data-action@v1.5.0
      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 8
      - name: Prep Release Notes
        env:
          CI_COMMIT_MESSAGE: ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}
          CI_COMMIT_SHORT_SHA: ${{ steps.short-sha.outputs.sha }}
        run: |
          echo $CI_COMMIT_MESSAGE > release-dogfood.txt
          builddate="$(date +"%A, %d %B %Y %T %Z")"
          printf "\nRelease Notes\n" >> release-dogfood.txt
          cat LATEST >> release-dogfood.txt
          printf "\n\nAPK Built on $builddate on branch $CI_COMMIT_REF_NAME ($CI_COMMIT_SHORT_SHA), type $APP_TYPE" >> release-dogfood.txt
      - name: Verify Release Notes
        run: cat release-dogfood.txt
      - name: Prep APK
        run: |
          cp ./release/app-arm64-v8a-release.apk ./firebase/app.apk
          cp release-dogfood.txt ./firebase
      - name: Deploy APK to Firebase App Distribution
        uses: w9jds/firebase-action@v13.9.0
        with:
          args: appdistribution:distribute app.apk --app $FIREBASE_APPID --groups "dogfooder" --release-notes-file "release-dogfood.txt" --debug
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          PROJECT_PATH: firebase
          FIREBASE_APPID: ${{ secrets.FIREBASE_APPID }}
