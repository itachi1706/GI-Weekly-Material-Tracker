name: Update Firebase Data

on: 
  push:
    branches:
      - "master"
    paths:
      - ".github/workflows/firebase-update.yml"
      - "firebase/**/*"
      - "util/**/*"
      - "public/**/*"
  workflow_dispatch:

jobs:
  build-utility:
    name: Build Admin Util Tool # From "Build and Test Admin Util" and "Install Admin Util Dependencies" in GitLab CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.JS 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: util/package-lock.json
      - run: npm ci
        working-directory: util
      - run: npm run build --if-present
        working-directory: util
      - run: npm run test --if-present
        working-directory: util
        env:
          CI: true
  changedfiles:
    name: Check which files are changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if files changed for Realtime DB Banner
        id: rtdb-banner
        uses: tj-actions/changed-files@v42.0.1
        with:
          files: |
            public/data/EventBanners.json
            util/**
      - name: Check if files changed for Firestore Public JSONs
        id: fspj
        uses: tj-actions/changed-files@v42.0.1
        with:
          files: |
            public/data/**
            util/**
      - name: Check if files changed for Cloud Storage Data
        id: csd
        uses: tj-actions/changed-files@v42.0.1
        with:
          files: public/images/**
      - name: Check if files changed for Firestore Indexes
        id: fsi
        uses: tj-actions/changed-files@v42.0.1
        with:
          files: firebase/firestore.indexes.json
      - name: Check if files changed for Firebase Security Rules
        id: fbsr
        uses: tj-actions/changed-files@v42.0.1
        with:
          files: firebase/**
      - name: Check if files changed for Firestore Cloud Function
        id: fbcf
        uses: tj-actions/changed-files@v42.0.1
        with:
          files: |
            firebase/functions/**
            firebase/firebase.json
      - name: Check if files changed for Firestore Templates JSONs
        id: fstj
        uses: tj-actions/changed-files@v42.0.1
        with:
          files: |
            public/templates/**
            util/**
      - name: Set output for Realtime DB Banner
        id: rtdb-banner_out
        if: steps.rtdb-banner.outputs.any_changed == 'true'
        run: echo "any_changed=true" >> $GITHUB_OUTPUT
      - name: Set output for Firestore Public JSONs
        id: fspj_out
        if: steps.fspj.outputs.any_changed == 'true'
        run: echo "any_changed=true" >> $GITHUB_OUTPUT
      - name: Set output for Cloud Storage Data
        id: csd_out
        if: steps.csd.outputs.any_changed == 'true'
        run: echo "any_changed=true" >> $GITHUB_OUTPUT
      - name: Set output for Firestore Indexes
        id: fsi_out
        if: steps.fsi.outputs.any_changed == 'true'
        run: echo "any_changed=true" >> $GITHUB_OUTPUT
      - name: Set output for Firebase Security Rules
        id: fbsr_out
        if: steps.fbsr.outputs.any_changed == 'true'
        run: echo "any_changed=true" >> $GITHUB_OUTPUT
      - name: Set output for Firebase Cloud Function
        id: fbcf_out
        if: steps.fbcf.outputs.any_changed == 'true'
        run: echo "any_changed=true" >> $GITHUB_OUTPUT
      - name: Set output for Firestore Templates JSONs
        id: fstj_out
        if: steps.fstj.outputs.any_changed == 'true'
        run: echo "any_changed=true" >> $GITHUB_OUTPUT
    outputs:
      rtdbbanner: ${{ steps.rtdb-banner_out.outputs.any_changed }}
      fspj: ${{ steps.fspj_out.outputs.any_changed }}
      csd: ${{ steps.csd_out.outputs.any_changed }}
      fsi: ${{ steps.fsi_out.outputs.any_changed }}
      fbsr: ${{ steps.fbsr_out.outputs.any_changed }}
      fbcf: ${{ steps.fbcf_out.outputs.any_changed }}
      fstj: ${{ steps.fstj_out.outputs.any_changed }}
  update-rtdb:
    name: Update Realtime DB Game Banners # From "Update Realtime DB Game Banners" in GitLab CI
    runs-on: ubuntu-latest
    needs: [build-utility, changedfiles]
    if: needs.changedfiles.outputs.rtdbbanner
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.JS 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: util/package-lock.json
      - name: Extract Service Account Key
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > util/serviceAccountKey.json
          echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > /tmp/sak.json
      - name: Copy Event Banner JSON to Folder
        run: cp public/data/EventBanners.json util
      - run: npm i
        working-directory: util
      - name: Update Firebase Realtime DB Banner Data
        run: npm run updateBanners
        working-directory: util
      - name: Delete SAK
        run: rm /tmp/sak.json
  update-fsd:
    name: Update Firestore Public Data # From "Update Firestore Public Data" in GitLab CI
    runs-on: ubuntu-latest
    needs: [build-utility, changedfiles]
    if: needs.changedfiles.outputs.fspj
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.JS 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: util/package-lock.json
      - name: Extract Service Account Key
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > util/serviceAccountKey.json
          echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > /tmp/sak.json
      - name: Copy JSONs to Import Folder
        run: |
          mkdir util/import
          cp public/data/*.json util/import
          rm util/import/EventBanners.json
      - run: npm i
        working-directory: util
      # PRE-PROCESSING
      - name: Update Material Usages
        run: |
          mkdir local
          cp import/Weapons-*.json local
          cp import/Characters-*.json local
          npm run preProcessUsageLocal
          cp import/Materials-*.json process
          npm run processUsage
          cp output/Materials-*.json import
        working-directory: util
      - name: Update Firestore Public Data
        run: npm run updateFirestoreData
        working-directory: util
      - name: Delete SAK
        run: rm /tmp/sak.json
  update-csd:
    name: Update Google Cloud Storage Data # From "Update Google Cloud Storage Data" in GitLab CI
    runs-on: ubuntu-latest
    needs: [build-utility, changedfiles]
    if: needs.changedfiles.outputs.csd
    steps:
      - uses: actions/checkout@v4
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SVC_USER_JSON }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: 'Ensure GCloud Working'
        run: gcloud info
      - name: 'Update Cloud Storage Data'
        run: gsutil -m rsync -d -r . gs://$GCS_BUCKET/
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        working-directory: public/images
  deploy-fsi:
    name: Deploy Firebase Firestore Indexes # From "Deploy Firebase Firestore Indexes" in GitLab CI
    runs-on: ubuntu-latest
    needs: [build-utility, changedfiles]
    if: needs.changedfiles.outputs.fsi
    steps:
      - uses: actions/checkout@v4
      - name: Update Indexes
        uses: w9jds/firebase-action@v13.0.3
        with:
          args: deploy --only firestore:indexes --force
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          PROJECT_PATH: firebase
  deploy-fbsr:
    name: Deploy Firebase Security Rules # From "Deploy Firebase Security Rules" in GitLab CI
    runs-on: ubuntu-latest
    needs: [build-utility, changedfiles]
    if: needs.changedfiles.outputs.fbsr
    steps:
      - uses: actions/checkout@v4
      - name: Update Storage Security Rules
        uses: w9jds/firebase-action@v13.0.3
        with:
          args: deploy --only storage
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          PROJECT_PATH: firebase
      - name: Update Firestore Security Rules
        uses: w9jds/firebase-action@v13.0.3
        with:
          args: deploy --only firestore:rules
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          PROJECT_PATH: firebase
      - name: Update Realtime DB Security Rules
        uses: w9jds/firebase-action@v13.0.3
        with:
          args: deploy --only database
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          PROJECT_PATH: firebase
  deploy-fbcf:
    name: Deploy Firebase Cloud Function
    runs-on: ubuntu-latest
    needs: [build-utility, changedfiles]
    if: needs.changedfiles.outputs.fbcf
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.JS 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: firebase/functions/package-lock.json
      - name: Install Dependencies
        run: npm i
        working-directory: firebase/functions
      - name: Update Firebase Cloud Function
        uses: w9jds/firebase-action@v13.0.3
        with:
          args: deploy --only functions
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          PROJECT_PATH: firebase
  update-fstj:
    name: Update Firestore Template Data
    runs-on: ubuntu-latest
    needs: [build-utility, changedfiles]
    if: needs.changedfiles.outputs.fstj
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.JS 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: util/package-lock.json
      - name: Extract Service Account Key
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > util/serviceAccountKey.json
          echo $FIREBASE_SERVICE_ACCOUNT | base64 -d > /tmp/sak.json
      - name: Copy JSONs to Import Folder
        run: |
          mkdir util/templates
          cp public/templates/*.json util/templates
      - run: npm i
        working-directory: util
      - name: Update Firestore Template Data
        run: npm run updateFirestoreTemplates
        working-directory: util
      - name: Delete SAK
        run: rm /tmp/sak.json
