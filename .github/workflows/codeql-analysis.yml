# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
# ******** NOTE ********

name: "CodeQL"

on:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  push:
    branches-ignore: ["dependabot/**"]
  schedule:
    - cron: '17 17 * * 4'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 https://git.io/JvXDl

    # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # Custom Dart CodeQL
  dart-analyzer:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    name: CodeQL Dart Analysis
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Flutter Stable (${{vars.FLUTTER_COMPILE_VERSION}})
        uses: subosito/flutter-action@v2.19.0
        with:
          flutter-version: ${{ vars.FLUTTER_COMPILE_VERSION }}
          channel: 'stable'
          cache: true
      - name: Retrieve Firebase Options Web Dart File and decode it to a file
        env:
          GOOGLE_SVC_DART: ${{ secrets.GOOGLE_SVC_DART }}
          PUB_SEC_DART: ${{ secrets.PUB_SEC_DART }}
        run: |
          echo $GOOGLE_SVC_DART | base64 -d > lib/firebase_options.dart
          echo $PUB_SEC_DART | base64 -d > lib/app_secrets.dart
      - name: Dart Analyze
        run: flutter analyze --write dart_analyze.txt || true
      - name: Dart Analyze to SARIF
        uses: advanced-security/dart-analyzer-sarif@main
        with:
          input: dart_analyze.txt
          output: dart_analyze.sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: dart_analyze.sarif
